////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 Dimitry Ishenko
// Contact: dimitry (dot) ishenko (at) (gee) mail (dot) com
//
// Distributed under the GNU GPL license. See the LICENSE.md file for details.

////////////////////////////////////////////////////////////////////////////////
#ifndef SRC_AMCP_HPP
#define SRC_AMCP_HPP

////////////////////////////////////////////////////////////////////////////////
#include <QByteArray>
#include <QByteArrayList>
#include <QObject>
#include <QtNetwork/QAbstractSocket>

////////////////////////////////////////////////////////////////////////////////
namespace src
{

////////////////////////////////////////////////////////////////////////////////
class amcp : public QObject
{
    Q_OBJECT

public:
    ////////////////////
    amcp(QAbstractSocket&, const QByteArray& cmd, QObject* parent = nullptr);

signals:
    ////////////////////
    void done(const QByteArrayList&);
    void fail(const QString&);

private:
    ////////////////////
    QAbstractSocket& socket_;

    enum class state { init, read_datum, read_data, fail, done } state_ = state::init;

    QByteArray store_;
    QByteArrayList data_;

    void read();

    void set_done();
    void set_fail(const QString&);
};

////////////////////////////////////////////////////////////////////////////////
}

////////////////////////////////////////////////////////////////////////////////
#endif
